#!/usr/bin/env python
#
# (c) 2013 Joost Yervante Damad <joost@damad.be>
# License: GPL

import sys

from PySide import QtGui, QtCore
from PySide.QtCore import Qt

from gui.parts import PartTree

class Left(QtGui.QWidget):

  def __init__(self):
    super(Left, self).__init__()
    vbox = QtGui.QVBoxLayout(self)
    hbox = QtGui.QHBoxLayout()
    hbox.addWidget(QtGui.QLabel("Filter:"))
    self.filter_le = QtGui.QLineEdit()
    hbox.addWidget(self.filter_le)
    vbox.addLayout(hbox)
    self.part_tree = PartTree()
    vbox.addWidget(self.part_tree)
    self.setLayout(vbox)

class Right(QtGui.QWidget):

  def __init__(self):
    super(Right, self).__init__()

class MainWin(QtGui.QMainWindow):

  def __init__(self):
    super(MainWin, self).__init__()

    self.settings = QtCore.QSettings()

    menuBar = self.menuBar()
    fileMenu = menuBar.addMenu('&File')
    self.add_action(fileMenu, '&Quit', self.close, 'Ctrl+Q')

    helpMenu = menuBar.addMenu('&Help')
    self.add_action(helpMenu, '&About', self.about)

    splitter = QtGui.QSplitter(self, QtCore.Qt.Horizontal)
    self.left = Left()
    splitter.addWidget(self.left)
    self.right = Right()
    splitter.addWidget(self.right)
    self.setCentralWidget(splitter)
    self.statusBar().showMessage("Ready.")

  def close(self):
    QtGui.qApp.quit()

  def about(self):
    a = """
<p align="center"><b>madinv</b><br/>madparts inventory tool</p>
<p align="center">(c) 2013 Joost Yervante Damad &lt;joost@damad.be&gt;</p>
<p align="center"><a href="http://madparts.org">http://madparts.org</a></p>
"""
    QtGui.QMessageBox.about(self, "about madparts", a)

  def add_action(self, menu, text, slot, shortcut=None, checkable=False, checked=False):
    action = QtGui.QAction(text, self)
    if checkable:
      action.setCheckable(True)
      if checked:
        action.setChecked(True)
    menu.addAction(action)
    if slot == None:
      action.setDisabled(True)
    else:
      action.triggered.connect(slot)
    if shortcut != None: action.setShortcut(shortcut)
    return action

def gui_main():
  QtCore.QCoreApplication.setOrganizationName("madparts")
  QtCore.QCoreApplication.setOrganizationDomain("madparts.org")
  QtCore.QCoreApplication.setApplicationName("madinv")
  app = QtGui.QApplication(["madinv"])
  widget = MainWin()
  widget.show()
  return app.exec_()

if __name__ == '__main__':
  sys.exit(gui_main())
